plugins {
  id 'com.android.application'
  id 'kotlin-android'
  id 'kotlin-android-extensions'
  id 'kotlin-kapt'
  id 'bugly'
}
apply from: 'and_res_guard.gradle'

def buglyAppId = 'c6e450ad19'
def buglyAppKey = '54ece6d9-fcb0-4ce2-8dae-b86efb65617c'
def buglyAppIdDebug = 'c6e450ad19'
def buglyAppKeyDebug = '54ece6d9-fcb0-4ce2-8dae-b86efb65617c'
def buglyAppIdRelease = 'c6e450ad19'
def buglyAppKeyRelease = '54ece6d9-fcb0-4ce2-8dae-b86efb65617c'
//动态读取app名称
def appName = ""

android {
  compileSdkVersion Versions.sdkTarget
  defaultConfig {
    //动态设置APP名称:https://www.jianshu.com/p/a7e8449b37e3
    String path = getProjectDir().getPath() + "/src/main/java/cc/abase/demo/config/AppConfig.kt"
    File file = new File(path)
    file.find { line ->
      if (line.toString().contains("defaultAppName") && line.toString().contains("=")) {
        appName = line.toString().split("=")[1].toString().trim().replace("\"", "")
        return true
      }
    }
    //正常配置
    applicationId rootProject.ext.android.applicationId
    minSdkVersion Versions.sdkMin
    targetSdkVersion Versions.sdkTarget
    versionCode rootProject.ext.android.versionCode
    versionName rootProject.ext.android.versionName
    resValue "string", "app_name", appName //设置APP名称
    resValue "string", "build_time", rootProject.ext.android.buildTime
    //允许使用SVG
    //    vectorDrawables.useSupportLibrary = true
    multiDexEnabled true
    resConfigs "zh", "en" //保留中文和英文资源
    ndk {
      abiFilters 'armeabi-v7a' //, 'arm64-v8a'
    }
    //资源文件名冲突，引用包重复，文件名显示的格式与文件本身的格式不对应
    //    aaptOptions.cruncherEnabled = false
    //    aaptOptions.useNewCruncher = false
    //RxHttp需要 https://github.com/liujingxing/okhttp-RxHttp
    javaCompileOptions {
      annotationProcessorOptions {
        arguments = [
            ////必须，告知RxHttp你依赖的okhttp版本，目前已适配 v3.12.0 - v4.7.2版本
            rxhttp_okhttp: Versions.okHttp,
            //使用asXxx方法时必须，告知RxHttp你依赖的rxjava版本，可传入rxjava2、rxjava3
            rxhttp_rxjava: 'rxjava2'
        ]
      }
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  //部分DSL需要
  kotlinOptions { jvmTarget = "1.8" }

  //多维度 https://blog.csdn.net/chen_xi_hao/article/details/80526049
  flavorDimensions "default"
  //公开发布商店渠道配置
  productFlavors {
    //渠道develop
    flavors_dev {
      //版本号
      def version_Name = "1.1.0"
      def version_Build = 1
      def version_Code = (version_Name.replace(".", "")).toInteger() * 1000 + version_Build
      dimension "default"
      applicationId "com.abase.dev"
      versionName version_Name
      versionCode version_Code
    }
    //渠道release
    flavors_rel {
      //版本号
      def version_Name = "1.1.0"
      def version_Build = 2
      def version_Code = (version_Name.replace(".", "")).toInteger() * 1000 + version_Build
      dimension "default"
      applicationId "com.abase.rel"
      versionName version_Name
      versionCode version_Code
    }
  }

  //配置不同版本的keystore
  signingConfigs {
    debug {
      storeFile file(STORE_FILE_ABASE)
      storePassword STORE_PASSWORD_ABASE
      keyAlias KEY_ALIAS_ABASE
      keyPassword KEY_PASSWORD_ABASE
    }
    release {
      storeFile file(STORE_FILE_ABASE)
      storePassword STORE_PASSWORD_ABASE
      keyAlias KEY_ALIAS_ABASE
      keyPassword KEY_PASSWORD_ABASE
    }
  }

  //正式和测试配置
  buildTypes {
    debug {
      debuggable true
      zipAlignEnabled false
      shrinkResources false
      minifyEnabled false
      signingConfig signingConfigs.debug
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
      buglyAppId = buglyAppIdDebug
      buglyAppKey = buglyAppKeyDebug
      resValue "string", "bugly_app_id", buglyAppIdDebug
    }
    release {
      debuggable false
      zipAlignEnabled true
      shrinkResources true
      minifyEnabled true
      signingConfig signingConfigs.release
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
      buglyAppId = buglyAppIdRelease
      buglyAppKey = buglyAppKeyRelease
      resValue "string", "bugly_app_id", buglyAppIdRelease
    }
  }
}

android.applicationVariants.all { variant ->
  variant.outputs.all { output ->
    //名称
    //String appName = ""
    //String path = getProjectDir().getPath() + "/src/main/res/values/strings.xml"
    //new XmlSlurper().parse(path)."string".find { name ->
    //  if (name."@name" == "app_name") {
    //    appName = name
    //    return true
    //  }
    //}
    //正式版还是测试版
    String typeName = buildType.name
    typeName = typeName.substring(0, 1).toUpperCase() + typeName.substring(1).toLowerCase()
    //build名称
    String buildVer = String.valueOf(rootProject.ext.android.versionCode)
    String buildName = "_build" + buildVer
    //编译日期
    String buildTime = "_" + String.valueOf(rootProject.ext.android.buildTime)
    //打包的电脑
    String computer = "_" + String.valueOf(rootProject.ext.android.computer)
    //后缀名
    String suffix = ".apk"
    //生成输出文件名称
    String fileName = "${appName}${typeName}${buildName}${buildTime}${computer}${suffix}"
    //是否需要删除旧文件APK
    boolean needDelOldApk = false
    //输入文件设置
    if (needDelOldApk) {
      outputFileName = fileName
    } else {
      assemble.doLast {
        //解决Android Studio3.6删除安卓包的问题
        String buildEndTime = "_${new Date().format("yyyyMMdd_HHmm")}"
        fileName = "${appName}${typeName}${buildName}${buildEndTime}${computer}${suffix}"
        project.copy {
          from("${output.outputFile}")
          into("${output.outputFile.parent}")
          rename("${output.outputFile.name}", "${fileName}")
        }
      }
    }
    assemble.doLast {
      //开启线程，在打包完成后20秒杀掉JDK，防止下次运行出现被占用的情况
      new Thread() {
        @Override void run() {
          sleep(20 * 1000)
          String cmd = "taskkill /f /t /im java.exe"
          cmd.execute().text.trim()
        }
      }.start()
    }
  }
}

bugly {
  debug = true
  appId = buglyAppId
  appKey = buglyAppKey
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation project(':ablibrary')
  implementation project(':silicompressor')
  flavors_devImplementation Deps.leakcanary
  implementation Deps.emoji
  implementation Deps.startup
  implementation Deps.gsy_player_java
  implementation Deps.dk_java
  implementation Deps.dk_ui
  implementation Deps.dk_exo
  implementation Deps.danma_master
  implementation Deps.danma_bitmap
  implementation Deps.side_bar
  implementation Deps.bugly_crash
  implementation Deps.bugly_native
  implementation Deps.pinyin
  implementation Deps.pinyin_android
  implementation Deps.spedit_tool
  kapt Deps.epoxy_processor
  implementation Deps.rxhttp
  kapt Deps.rxhttp_kapt
  implementation Deps.rxlife_rxjava
  implementation Deps.wheelview
  implementation Deps.pickerview
  implementation Deps.flexbox
}