apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: 'and_res_guard.gradle'

android {
  compileSdkVersion 28
  defaultConfig {
    applicationId rootProject.ext.android.applicationId
    minSdkVersion 21
    targetSdkVersion 28
    versionCode rootProject.ext.android.versionCode
    versionName rootProject.ext.android.versionName
    vectorDrawables.useSupportLibrary = true
    multiDexEnabled true
    resConfigs "zh", "en" //保留中文和英文资源
    ndk {
      abiFilters 'armeabi-v7a' //, 'arm64-v8a'
    }
    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  //flavorDimensions "default"
  ////公开发布商店渠道配置
  //productFlavors {
  //  //程序员本地跑的包(只直接在AS中跑，不打包给其他人)
  //  Developer {
  //    dimension "default"
  //  }
  //  //打包后★必须使用多渠道设置渠道★(不直接跑包，打包时使用)
  //  Package {
  //    dimension "default"
  //  }
  //}

  //配置不同版本的keystore
  signingConfigs {
    debug {
      storeFile file(STORE_FILE_QRCODE)
      storePassword STORE_PASSWORD_QRCODE
      keyAlias KEY_ALIAS_QRCODE
      keyPassword KEY_PASSWORD_QRCODE
    }
    release {
      storeFile file(STORE_FILE_QRCODE)
      storePassword STORE_PASSWORD_QRCODE
      keyAlias KEY_ALIAS_QRCODE
      keyPassword KEY_PASSWORD_QRCODE
    }
  }
  buildTypes {
    debug {
      zipAlignEnabled false
      shrinkResources false
      minifyEnabled false
      signingConfig signingConfigs.debug
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
    release {
      zipAlignEnabled true
      shrinkResources true
      minifyEnabled true
      signingConfig signingConfigs.release
      proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
    }
  }
}

android.applicationVariants.all { variant ->
  variant.outputs.all {
    //名称
    String appName = ""
    String path = getProjectDir().getPath() + "/src/main/res/values/strings.xml"
    new XmlSlurper().parse(path)."string".find { name ->
      if (name."@name" == "app_name") {
        appName = name
        return true
      }
    }
    //正式版还是测试版
    String typeName = buildType.name
    typeName = typeName.substring(0, 1).toUpperCase() + typeName.substring(1).toLowerCase()
    //build名称
    String buildVer = String.valueOf(rootProject.ext.android.versionCode)
    String buildName = "_build" + buildVer
    //编译日期
    String buildTime = "_" + String.valueOf(rootProject.ext.android.buildTime)
    //打包的电脑
    String computer = "_" + String.valueOf(rootProject.ext.android.computer)
    //后缀名
    String suffix = ".apk"
    //生成输出文件名称
    outputFileName = "${appName}${typeName}${buildName}${buildTime}${computer}${suffix}"
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
  implementation project(':ablibrary')

  implementation 'androidx.appcompat:appcompat:1.1.0'
  implementation 'androidx.core:core-ktx:1.1.0'
  implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

  //https://github.com/airbnb/epoxy 放在lib中失败
  kapt 'com.airbnb.android:epoxy-processor:3.7.0'
}